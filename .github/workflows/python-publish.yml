name: Upload Python Package

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  tag_check:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check package version
        run: |
          cd google-surfer
          VERSION=$(grep "version" pyproject.toml | cut -d'"' -f 2)
          if git show-ref --tags --verify --quiet "refs/tags/${VERSION}"; then
            echo "Package version ${VERSION} already exists."
            exit 1
          else
            echo "Package version ${VERSION} does not exist."
          fi

  build:
    runs-on: ubuntu-22.04
    needs: [tag_check]
    steps:
      - uses: actions/checkout@v3
      - name: Generate custom version tag
        id: generate_version_tag
        run: echo "VERSION_TAG=$(grep "version" pyproject.toml | cut -d'"' -f 2)" >> $GITHUB_OUTPUT
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.PUBLISH_PYPI_PACKAGE_TOKEN }}
          custom_tag: ${{ steps.generate_version_tag.output.VERSION_TAG }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          token: ${{ secrets.PUBLISH_PYPI_PACKAGE_TOKEN }}

  deploy:
    runs-on: ubuntu-22.04
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
